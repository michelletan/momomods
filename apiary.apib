FORMAT: 1A
HOST: http://momomods.apiblueprint.org/

# MoMoMods

MoMoMods helps you plan your timetable with friends!

## Timetable [/{year}/{sem}/timetable]

### Get Timetable for year and sem [GET]

+ Response 200 (application/json)
        
        {
            "id": 1,
            "userId: 1,
            year: "2016-2017",
            semester: 1,
            createdAt: "2016-09-12T08:51:25.000Z",
            updatedAt: "2016-09-12T08:51:25.000Z",
            "last_synced": "2016-09-08T00:09:35+00:00",
            "timetableModules": [
                {
                    id: 1,
                    timetableId: 1,
                    moduleId: 1,
                    lessonType: "Lecture",
                    classNumber: "1",
                    module:{
                        "module_code": "CS1010",
                        "lesson_type": "sectional",
                        "class_number": "1"
                    }
                }
            ]
        }

### Update modules in Timetable [POST]

Timetable will be updated with all module data given in post request.
The response is the complete timetable for year and sem with the module added.

+ Request (application/json)

        [
            {
                "module_code": "CS1010",
                "lesson_type": "tutorial",
                "class_number": "2",
            },
            {
                "module_code": "CS1010",
                "lesson_type": "sectional",
                "class_number": "1",
            },
            {
                "module_code": "CS1231",
                "lesson_type": "sectional",
                "class_number": "1",
            }
        ]

+ Response 201 (application/json)

        [
            {
                "module_code": "CS1010",
                "lesson_type": "sectional",
                "class_number": "1"
            },
            {
                "module_code": "CS1010",
                "lesson_type": "tutorial",
                "class_number": "2",
            },
            {
                "module_code": "CS1231",
                "lesson_type": "sectional",
                "class_number": "1",
            }
        ]
        
## Team Collection [/{year}/{sem}/team]

### List teams I belong to [GET]

+ Response 200 (application/json)

        [
            {
                "createdBy": {
                    "userId": "1",
                    "name": "Niko"
                },
                "teamId": "1",
                "teamName": "3216 assignment 3",
                "members": [
                    {"userId": "1", "name": "Niko"},
                    {"userId": "2", "name": "Mich"}
                ]
            },
            {
                "createdBy": {
                    "userId": "3",
                    "name": "Zhi An"
                },
                "teamId": "2",
                "teamName": "3216 final project",
                "members": [
                    {"userId": "1", "name": "Niko"},
                    {"userId": "3", "name": "Zhi An"}
                ]
            }
        ]

### Create a new team [POST]

+ Request (application/json)

        [
            {
                "teamName": "3216 final project"
            }
        ]

+ Response 200 (application/json)

        [
            {
                "createdBy": {
                    "userId": "1",
                    "name": "Niko"
                },
                "teamId": "3",
                "teamName": "3216 final project",
                "members": [
                    {"userId": "1", "name": "Niko"},
                ]
            }
        ]
        
## Group [/{year}/{sem}/group/{id}]

### Get group info [GET]

+ Response 200 (application/json)

        {
            "group_id": "{id}",
            "group_name": "3216 final project",
            "members": ["1", "2"]
        }

### Add members to group [POST]

+ Request (application/json)

        {
            "members": ["2", "3"]
        }

+ Response 200 (application/json)

        [
            {
                "group_id": "3",
                "group_name": "3216 final project",
                "members": ["1", "2", "3"]
            }
        ]
        
## Friends [/friends]

### Get connected friends [GET]

+ Response 200 (application/json)

        [
            {
                "friend_name": "Niko",
                "user_id": "2"
            },
            {
                "friend_name": "Mich",
                "user_id": "3"
            },
            {
                "friend_name": "Pat",
                "user_id": "3"
            }
        ]